
Вывод данных с датчиков Agrolab GH по протоколу MODBUS TCP
-------------------------------------------------------

Программное обеспечение для вывода данных
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Для вывода данных с датчиков, установленных в умной Agrolab GH, на локальный сервер и управления подвижными элементами Agrolab GH, используется установленное на персональном компьютере программное обеспечение Node-RED, предоставляющее удобный интерфейс для построения логических связей между данными, получаемыми от датчиков в реальном времени, и Agrolab GH

**Установка библиотеки ModbusServerWiFi**

Библиотеку ModbusServerWiFi можно найти и загрузить из Arduino IDE, используя менеджер библиотек. Это делается через меню "Инструменты" -> "Управление библиотеками".

.. figure:: images/5.png
       :width: 60%
       :align: center
       :alt: Логический уровень
       

**Создание Modbus сервера на ESP32**

Этот код предоставляет основу для создания Modbus сервера на ESP32::

    #include <ModbusServerWiFi.h>
    #include <WiFi.h>

    // Параметры Wi-Fi
    const char* ssid = "Ваш_SSID";
    const char* password = "Ваш_пароль";

    // Создаем экземпляр сервера Modbus
    ModbusServerWiFi modbusServer;

    void setup() {
    // Инициализация Wi-Fi
    WiFi.begin(ssid, password);
    while (WiFi.status() != WL_CONNECTED) {
        delay(1000);
        Serial.println("Подключение к Wi-Fi...");
    }
    Serial.println("Подключено к Wi-Fi");

    // Настройка Modbus сервера
    modbusServer.begin(502); // Порт Modbus (стандартный - 502)

    // Добавление регистров Modbus
    // Здесь можно добавить свои регистры
    // Например:
    // modbusServer.addHoldingRegister(0, 0); // Добавление регистра хранения

    Serial.println("Modbus сервер запущен");
    }

    void loop() {
    // Обработка запросов Modbus
    modbusServer.poll();

    // Добавьте свой код здесь для обработки данных или событий
    }    

1. Код начинается с подключения ESP32 к Wi-Fi с использованием заданных SSID и пароля. Это позволяет устройству быть доступным в вашей локальной сети.

2. Инициализация Modbus сервера: Затем создается экземпляр Modbus сервера с указанием порта (стандартный порт Modbus - 502).

3. Добавление регистров Modbus: Вы можете добавить регистры Modbus (регистры хранения, входные регистры, катушки и дискретные входы) с помощью методов ``addHoldingRegister``, ``addInputRegister``, ``addCoil`` и ``addDiscreteInput``. Эти регистры используются для хранения и передачи данных между устройствами через протокол Modbus.

4. Обработка запросов Modbus: В основном цикле ``loop``, метод ``poll()`` вызывается для обработки входящих запросов Modbus от других устройств.

5. Добавление своего кода: Вы можете добавить свой собственный код в основной цикл ``loop`` для обработки данных или событий на устройстве. Например, вы можете считывать данные с датчиков.